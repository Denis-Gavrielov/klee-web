angular.module("ui.slider",[]).value("uiSliderConfig",{}).directive("uiSlider",["uiSliderConfig","$timeout",function(a,b){return a=a||{},{require:"ngModel",compile:function(){return function(c,d,e,f){function g(a,b){return b?parseFloat(a):parseInt(a)}function h(){d.slider("destroy")}var i=angular.extend(c.$eval(e.uiSlider)||{},a),j={min:null,max:null},k=["min","max","step"],l=!angular.isUndefined(e.useDecimals),m=function(){angular.isArray(f.$viewValue)&&i.range!==!0&&(console.warn("Change your range option of ui-slider. When assigning ngModel an array of values then the range option should be set to true."),i.range=!0),angular.forEach(k,function(a){angular.isDefined(e[a])&&(i[a]=g(e[a],l))}),d.slider(i),m=angular.noop};angular.forEach(k,function(a){e.$observe(a,function(b){b&&(m(),d.slider("option",a,g(b,l)),f.$render())})}),e.$observe("disabled",function(a){m(),d.slider("option","disabled",!!a)}),c.$watch(e.uiSlider,function(a){m(),void 0!=a&&d.slider("option",a)},!0),b(m,0,!0),d.bind("slide",function(a,b){f.$setViewValue(b.values||b.value),c.$apply()}),f.$render=function(){m();var a=i.range===!0?"values":"value";i.range||!isNaN(f.$viewValue)||f.$viewValue instanceof Array?i.range&&!angular.isDefined(f.$viewValue)&&(f.$viewValue=[0,0]):f.$viewValue=0,i.range===!0&&(angular.isDefined(i.min)&&i.min>f.$viewValue[0]&&(f.$viewValue[0]=i.min),angular.isDefined(i.max)&&i.max<f.$viewValue[1]&&(f.$viewValue[1]=i.max),f.$viewValue[0]>f.$viewValue[1]&&(j.min>=f.$viewValue[1]&&(f.$viewValue[0]=j.min),j.max<=f.$viewValue[0]&&(f.$viewValue[1]=j.max)),j.min=f.$viewValue[0],j.max=f.$viewValue[1]),d.slider(a,f.$viewValue)},c.$watch(e.ngModel,function(){i.range===!0&&f.$render()},!0),d.bind("$destroy",h)}}}}]);