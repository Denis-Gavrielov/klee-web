# # Python CircleCI 2.0 configuration file
# #
# # Check https://circleci.com/docs/2.0/language-python/ for more details
# #
# version: 2
# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
#       - image: circleci/python:3.6.1

#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/postgres:9.4

#     working_directory: ~/repo

#     steps:
#       - checkout

#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#             - v1-dependencies-{{ checksum "requirements.txt" }}
#             # fallback to using the latest cache if no exact match is found
#             - v1-dependencies-

#       - run:
#           name: install dependencies
#           command: |
#             python3 -m venv venv
#             . venv/bin/activate
#             pip install -r requirements.txt

#       - save_cache:
#           paths:
#             - ./venv
#           key: v1-dependencies-{{ checksum "requirements.txt" }}

#       # run tests!
#       # this example uses Django's built-in test-runner
#       # other common Python testing frameworks include pytest and nose
#       # https://pytest.org
#       # https://nose.readthedocs.io
#       - run:
#           name: run tests
#           command: |
#             . venv/bin/activate
#             python manage.py test

#       - store_artifacts:
#           path: test-reports
#           destination: test-reports

# ------------- V2 --------------
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7.3
    steps:
      - checkout  # checks out the source code
      - run: sudo apt-get install software-properties-common
      - run: lsb_release -a  # delete
      - run: sudo apt-get update -qq
      - run: sudo pip install ansible
      - run: sudo pip install docker-py  # needed?
      - run: sudo ln -s /home/ubuntu/klee-web/ /titb
      - run: ansible-galaxy install --force --role-file=requirements.yml
      - run: ansible --version
      - run: ansible-playbook -i localhost, --syntax-check provisioning/vagrant.yml
      - run: ansible-playbook -i localhost, --connection=local -vvv -e ci=yes provisioning/vagrant.yml
      - run: echo "A first hello. This works"

# ------------- V3 --------------
# version: 2
# jobs:
#   one:
#     docker:
#       - image: circleci/ruby:2.4.1
#     steps:
#       - checkout
#       - run: echo "A first hello"
#       - run: mkdir -p my_workspace
#       - run: echo "Trying out workspaces" > my_workspace/echo-output
#       - persist_to_workspace:
#           # Must be an absolute path, or relative path from working_directory
#           root: my_workspace
#           # Must be relative path from root
#           paths:
#             - echo-output      
#   two:
#     docker:
#       - image: circleci/ruby:2.4.1
#     steps:
#       - checkout
#       - run: echo "A more familiar hi"  
#       - attach_workspace:
#           # Must be absolute path or relative path from working_directory
#           at: my_workspace

#       - run: |
#           if [[ $(cat my_workspace/echo-output) == "Trying out workspaces" ]]; then
#             echo "It worked!";
#           else
#             echo "Nope!"; exit 1
#           fi
# workflows:
#   version: 2
#   one_and_two:
#     jobs:
#       - one
#       - two:
#           requires:
#             - one
